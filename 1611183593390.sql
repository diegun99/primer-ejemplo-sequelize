-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA mydb;

CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`TIPO_DOCUMENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TIPO_DOCUMENTO` (
  `ID_TIPO_DOC` VARCHAR(3) NOT NULL,
  `DESCRIPCION` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_TIPO_DOC`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`GENERO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`GENERO` (
  `ID_GENERO` CHAR(1) NOT NULL,
  `DESCRIPCION` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_GENERO`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ESTADO_CIVIL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ESTADO_CIVIL` (
  `ID_ESTADO_CIVIL` INT NOT NULL,
  `DESCRIPCION` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_ESTADO_CIVIL`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`NIVEL_EDUCATIVO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`NIVEL_EDUCATIVO` (
  `ID_NIVEL_EDUCATIVO` INT NOT NULL,
  `DESCRIPCION` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_NIVEL_EDUCATIVO`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ESTRATO_SOCIOECONOMICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ESTRATO_SOCIOECONOMICO` (
  `ID_ESTRATO`  INT NOT NULL  COMMENT 'IDENTIFICADOR DEL ESTRATO',
  `DESCRIPCION` VARCHAR(45) NOT NULL DEFAULT 'DESCRIPCION DEL ESTRATO',
  PRIMARY KEY (`ID_ESTRATO`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`REGIMEN_SALUD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`REGIMEN_SALUD` (
  `ID_REGIMEN_SALUD` INT NOT NULL,
  `DESCRIPCION` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_REGIMEN_SALUD`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ENTREVISTADO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ENTREVISTADO` (
  `CODIGO_ENTREVISTA` INT NOT NULL,
  `NUM_DOCUMENTO` INT NOT NULL,
  `TIPO_DOCUMENTO` VARCHAR(3) NOT NULL,
  `GENERO` CHAR(1) NOT NULL,
  `NUM_TELEFONO` VARCHAR(45) NULL,
  `ESTADO_CIVIL` INT NOT NULL,
  `NIVEL_EDUCATIVO` INT NOT NULL,
  `EDAD` INT NOT NULL COMMENT 'REGISTRA LA EDAD DEL ENTREVISTADO',
  `ID_ESTRATO` INT NOT NULL,
  `ID_REGIMEN_SALUD` INT NOT NULL,
  `EPS` VARCHAR(45) NOT NULL DEFAULT 'REGISTRA LA EPS DEL ENTREVISTADO',
  `ZONA_RESIDENCIA` VARCHAR(45) NULL DEFAULT 'RURAL, URBANA' COMMENT '\'SOLO TOMA LOS VALORES UNO DE LOS SIGUIENTES VALORES: RURAL O URBANA\'',
  `DIRECCION` VARCHAR(45) NOT NULL,
  `ESTUDIA_ACTUALMENTE` VARCHAR(45) NOT NULL,
  `TRABAJA_ACTUALMENTE` VARCHAR(45) NOT NULL,
  `HIJOS` VARCHAR(45) NOT NULL DEFAULT 'SI o NO',
  `NUM_HIJOS` VARCHAR(45) NULL,
  `DEPENDENCIA_ECONOMICA` VARCHAR(45) NULL,
  PRIMARY KEY (`CODIGO_ENTREVISTA`),
  INDEX `fk_ENTREVISTADO_TIPO_DOCUMENTO_idx` (`TIPO_DOCUMENTO` ASC) ,
  INDEX `fk_ENTREVISTADO_GENERO1_idx` (`GENERO` ASC) ,
  INDEX `fk_ENTREVISTADO_ESTADO_CIVILO1_idx` (`ESTADO_CIVIL` ASC) ,
  INDEX `fk_ENTREVISTADO_NIVEL_EDUCATIVO1_idx` (`NIVEL_EDUCATIVO` ASC) ,
  INDEX `fk_ENTREVISTADO_ESTRATO_SOCIOECONOMICO1_idx` (`ID_ESTRATO` ASC) ,
  INDEX `fk_ENTREVISTADO_REGIMEN_SALUD1_idx` (`ID_REGIMEN_SALUD` ASC) ,
  CONSTRAINT `fk_ENTREVISTADO_TIPO_DOCUMENTO`
    FOREIGN KEY (`TIPO_DOCUMENTO`)
    REFERENCES `mydb`.`TIPO_DOCUMENTO` (`ID_TIPO_DOC`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTREVISTADO_GENERO1`
    FOREIGN KEY (`GENERO`)
    REFERENCES `mydb`.`GENERO` (`ID_GENERO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTREVISTADO_ESTADO_CIVILO1`
    FOREIGN KEY (`ESTADO_CIVIL`)
    REFERENCES `mydb`.`ESTADO_CIVIL` (`ID_ESTADO_CIVIL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTREVISTADO_NIVEL_EDUCATIVO1`
    FOREIGN KEY (`NIVEL_EDUCATIVO`)
    REFERENCES `mydb`.`NIVEL_EDUCATIVO` (`ID_NIVEL_EDUCATIVO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTREVISTADO_ESTRATO_SOCIOECONOMICO1`
    FOREIGN KEY (`ID_ESTRATO`)
    REFERENCES `mydb`.`ESTRATO_SOCIOECONOMICO` (`ID_ESTRATO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTREVISTADO_REGIMEN_SALUD1`
    FOREIGN KEY (`ID_REGIMEN_SALUD`)
    REFERENCES `mydb`.`REGIMEN_SALUD` (`ID_REGIMEN_SALUD`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TAMIZAJE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TAMIZAJE` (
  `ID_TAMIZAJE` INT NOT NULL,
  `PESO` DOUBLE NOT NULL,
  `IMC` DOUBLE NULL,
  `PERIMETRO_ABDOMINAL` DOUBLE NOT NULL,
  `TENSION_ARTERIAL` INT NOT NULL,
  `ACTIVIDAD_FISICA` VARCHAR(45) NULL DEFAULT 'SI o NO',
  `ENTREVISTADO_CODIGO_ENTREVISTA` INT NOT NULL,
  PRIMARY KEY (`ID_TAMIZAJE`, `ENTREVISTADO_CODIGO_ENTREVISTA`),
  INDEX `fk_TAMIZAJE_ENTREVISTADO1_idx` (`ENTREVISTADO_CODIGO_ENTREVISTA` ASC) ,
  CONSTRAINT `fk_TAMIZAJE_ENTREVISTADO1`
    FOREIGN KEY (`ENTREVISTADO_CODIGO_ENTREVISTA`)
    REFERENCES `mydb`.`ENTREVISTADO` (`CODIGO_ENTREVISTA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`INTERPRETACION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`INTERPRETACION` (
  `ID_INTERPRETACION` INT NOT NULL,
  `DESCRIPCION` VARCHAR(500) NULL,
  `TAMIZAJE_ID_TAMIZAJE` INT NOT NULL,
  `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA` INT NOT NULL,
  PRIMARY KEY (`ID_INTERPRETACION`, `TAMIZAJE_ID_TAMIZAJE`, `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA`),
  INDEX `fk_INTERPRETACION_TAMIZAJE1_idx` (`TAMIZAJE_ID_TAMIZAJE` ASC, `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA` ASC) ,
  CONSTRAINT `fk_INTERPRETACION_TAMIZAJE1`
    FOREIGN KEY (`TAMIZAJE_ID_TAMIZAJE` , `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA`)
    REFERENCES `mydb`.`TAMIZAJE` (`ID_TAMIZAJE` , `ENTREVISTADO_CODIGO_ENTREVISTA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`RECOMENDACION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`RECOMENDACION` (
  `ID_RECOMENDACION` INT NOT NULL,
  `DESCRICPION` VARCHAR(500) NULL,
  `TAMIZAJE_ID_TAMIZAJE` INT NOT NULL,
  `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA` INT NOT NULL,
  PRIMARY KEY (`ID_RECOMENDACION`, `TAMIZAJE_ID_TAMIZAJE`, `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA`),
  INDEX `fk_RECOMENDACION_TAMIZAJE1_idx` (`TAMIZAJE_ID_TAMIZAJE` ASC, `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA` ASC) ,
  CONSTRAINT `fk_RECOMENDACION_TAMIZAJE1`
    FOREIGN KEY (`TAMIZAJE_ID_TAMIZAJE` , `TAMIZAJE_ENTREVISTADO_CODIGO_ENTREVISTA`)
    REFERENCES `mydb`.`TAMIZAJE` (`ID_TAMIZAJE` , `ENTREVISTADO_CODIGO_ENTREVISTA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`FRECUENCIA_ALIMENTACION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`FRECUENCIA_ALIMENTACION` (
  `ID_FREC_ALIMENTACION` INT NOT NULL,
  `DESCRIPCION` VARCHAR(45) NULL,
  PRIMARY KEY (`ID_FREC_ALIMENTACION`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`DIABETES_FAMILIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`DIABETES_FAMILIA` (
  `ID_DIABETES_FAMILIA` INT NOT NULL,
  `RESPUESTA` VARCHAR(45) NOT NULL COMMENT 'REGISTRA:\nSI: PARES, HERMANOS, HIJOS \nSI: ABUELOS, TIOS, PRIMOS',
  PRIMARY KEY (`ID_DIABETES_FAMILIA`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ALIMENTACION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ALIMENTACION` (
  `ID_CONSUMO_ALIMENTOS` INT NOT NULL,
  `ENTREVISTADO_CODIGO_ENTREVISTA` INT NOT NULL,
  `ID_FREC_ALIMENTACION` INT NOT NULL,
  `HIPERTENSION` VARCHAR(45) NOT NULL DEFAULT 'SI o NO',
  `NIVEL_AZUCAR_SANGRE` VARCHAR(45) NOT NULL DEFAULT 'SI o NO',
  `ES_DIABETICO` VARCHAR(45) NOT NULL DEFAULT 'SI o NO',
  `ID_DIABETES_FAMILIA` INT NOT NULL,
  `FUMA` VARCHAR(2) NOT NULL COMMENT 'SI o NO',
  PRIMARY KEY (`ID_CONSUMO_ALIMENTOS`),
  INDEX `fk_ALIMENTACION_ENTREVISTADO1_idx` (`ENTREVISTADO_CODIGO_ENTREVISTA` ASC) ,
  INDEX `fk_ALIMENTACION_FRECUENCIA_ALIMENTACION1_idx` (`ID_FREC_ALIMENTACION` ASC) ,
  INDEX `fk_ALIMENTACION_DIABETES_FAMILIA1_idx` (`ID_DIABETES_FAMILIA` ASC) ,
  CONSTRAINT `fk_ALIMENTACION_ENTREVISTADO1`
    FOREIGN KEY (`ENTREVISTADO_CODIGO_ENTREVISTA`)
    REFERENCES `mydb`.`ENTREVISTADO` (`CODIGO_ENTREVISTA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ALIMENTACION_FRECUENCIA_ALIMENTACION1`
    FOREIGN KEY (`ID_FREC_ALIMENTACION`)
    REFERENCES `mydb`.`FRECUENCIA_ALIMENTACION` (`ID_FREC_ALIMENTACION`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ALIMENTACION_DIABETES_FAMILIA1`
    FOREIGN KEY (`ID_DIABETES_FAMILIA`)
    REFERENCES `mydb`.`DIABETES_FAMILIA` (`ID_DIABETES_FAMILIA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
